{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moawad/workspace/kaykroo/frontend/components/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { axiosInstance } from '../util/axios';\nimport { useRouter } from 'next/router';\nexport default function Login(props) {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.username) {\n        errors.username = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n\n      try {\n        axiosInstance.post('/user/login', values).then(function (response) {\n          router.push('/');\n        })[\"catch\"](function (e) {\n          console.log('error');\n        });\n      } catch (e) {//error.username = 'Wrong username or password';\n      }\n    },\n    children: function children(_ref2) {\n      var values = _ref2.values,\n          errors = _ref2.errors,\n          touched = _ref2.touched,\n          handleChange = _ref2.handleChange,\n          handleBlur = _ref2.handleBlur,\n          handleSubmit = _ref2.handleSubmit;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Username\",\n            name: \"username\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, _this), errors.username && touched.username && errors.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, _this), errors.password && touched.password && errors.password, \"                        \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"custom-control-input\",\n              id: \"customCheck1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"custom-control-label\",\n              htmlFor: \"customCheck1\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-dark btn-lg btn-block\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Login, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/moawad/workspace/kaykroo/frontend/components/login.tsx"],"names":["React","Formik","axiosInstance","useRouter","Login","props","router","username","password","values","errors","setSubmitting","post","then","response","push","e","console","log","touched","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik} from 'formik';\nimport {axiosInstance} from '../util/axios';\nimport {useRouter} from 'next/router';\n\nexport default function Login(props) {\n    const router = useRouter();\n    return <Formik\n        initialValues={{username: '', password: ''}}\n        validate={values => {\n            const errors = {};\n            if (!values.username) {\n                errors.username = 'Required';\n            }\n            return errors;\n        }}\n        onSubmit={(values, {setSubmitting}) => {\n            try {\n                axiosInstance.post('/user/login', values).then(response => {\n                    router.push('/');\n                }).catch(e => {\n                    console.log('error');\n                });\n            } catch (e) {\n                //error.username = 'Wrong username or password';\n            }\n        }}\n    >\n        {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit\n          }) => (\n\n            <form onSubmit={handleSubmit}>\n\n                <div className='form-group'>\n                    <label>Username</label>\n                    <input type='text'\n                           className='form-control' placeholder='Username'\n                           name='username'\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           value={values.username}\n                    />\n                    {errors.username && touched.username && errors.username}\n\n                </div>\n\n                <div className='form-group'>\n                    <label>Password</label>\n                    <input\n                        type='password'\n                        className='form-control' placeholder='Password'\n                        name='password'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                    />\n                    {errors.password && touched.password && errors.password}                        </div>\n\n                <div className='form-group'>\n                    <div className='custom-control custom-checkbox'>\n                        <input type='checkbox' className='custom-control-input' id='customCheck1'/>\n                        <label className='custom-control-label' htmlFor='customCheck1'>Remember me</label>\n                    </div>\n                </div>\n\n                <button type='submit' className='btn btn-dark btn-lg btn-block'>Sign in</button>\n\n            </form>)}\n    </Formik>;\n\n}\n"]},"metadata":{},"sourceType":"module"}