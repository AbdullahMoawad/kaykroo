{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moawad/workspace/kaykroo/frontend/components/login.tsx\";\nimport React from 'react';\nimport { Formik, useFormik } from 'formik';\nimport { axiosInstance } from '../util/axios';\nimport { useRouter } from 'next/router';\nimport * as Yup from \"yup\";\nexport default function Login(props) {\n  const router = useRouter();\n  const formSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().min(5, 'Too Short!').max(50, 'Too Long!').required('Required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      password: ''\n    },\n    validationSchema: formSchema,\n    onSubmit: values => {\n      axiosInstance.put(`/user/${user.id}`, values).then(response => {\n        router.push(`/view/${response.data.id}`);\n      }).catch(e => {\n        var _e$response$data$erro;\n\n        const errors = (_e$response$data$erro = e.response.data.errors) !== null && _e$response$data$erro !== void 0 ? _e$response$data$erro : [];\n        errors.forEach(field => {\n          formik.setFieldError(field.param, field.msg);\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.username) {\n        errors.username = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      try {\n        axiosInstance.post('/user/login', values).then(response => {\n          router.push('/');\n        }).catch(e => {\n          console.log('error');\n        });\n      } catch (e) {//error.username = 'Wrong username or password';\n      }\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Username\",\n          name: \"username\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), errors.username && touched.username && errors.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), errors.password && touched.password && errors.password, \"                        \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"custom-control-input\",\n            id: \"customCheck1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-control-label\",\n            htmlFor: \"customCheck1\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark btn-lg btn-block\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["/Users/moawad/workspace/kaykroo/frontend/components/login.tsx"],"names":["React","Formik","useFormik","axiosInstance","useRouter","Yup","Login","props","router","formSchema","object","shape","firstName","string","min","max","required","lastName","email","password","formik","initialValues","user","validationSchema","onSubmit","values","put","id","then","response","push","data","catch","e","errors","forEach","field","setFieldError","param","msg","username","setSubmitting","post","console","log","touched","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, useFormik} from 'formik';\nimport {axiosInstance} from '../util/axios';\nimport {useRouter} from 'next/router';\nimport * as Yup from \"yup\";\n\nexport default function Login(props) {\n    const router = useRouter();\n\n    const formSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        lastName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        email: Yup.string().email('Invalid email').required('Required'),\n        password: Yup.string()\n            .min(5, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required')\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            password: ''\n        },\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            axiosInstance.put(`/user/${user.id}`, values).then(response => {\n                router.push(`/view/${response.data.id}`);\n            }).catch(e => {\n                const errors = e.response.data.errors ?? [];\n                errors.forEach(field => {\n                    formik.setFieldError(field.param, field.msg);\n\n                });\n            });\n        }\n    });\n\n\n\n\n\n    return <Formik\n        initialValues={{username: '', password: ''}}\n        validate={values => {\n            const errors = {};\n            if (!values.username) {\n                errors.username = 'Required';\n            }\n            return errors;\n        }}\n        onSubmit={(values, {setSubmitting}) => {\n            try {\n                axiosInstance.post('/user/login', values).then(response => {\n                    router.push('/');\n                }).catch(e => {\n                    console.log('error');\n                });\n            } catch (e) {\n                //error.username = 'Wrong username or password';\n            }\n        }}\n    >\n        {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit\n          }) => (\n\n            <form onSubmit={handleSubmit}>\n\n                <div className='form-group'>\n                    <label>Username</label>\n                    <input type='text'\n                           className='form-control' placeholder='Username'\n                           name='username'\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           value={values.username}\n                    />\n                    {errors.username && touched.username && errors.username}\n\n                </div>\n\n                <div className='form-group'>\n                    <label>Password</label>\n                    <input\n                        type='password'\n                        className='form-control' placeholder='Password'\n                        name='password'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                    />\n                    {errors.password && touched.password && errors.password}                        </div>\n\n                <div className='form-group'>\n                    <div className='custom-control custom-checkbox'>\n                        <input type='checkbox' className='custom-control-input' id='customCheck1'/>\n                        <label className='custom-control-label' htmlFor='customCheck1'>Remember me</label>\n                    </div>\n                </div>\n\n                <button type='submit' className='btn btn-dark btn-lg btn-block'>Sign in</button>\n\n            </form>)}\n    </Formik>;\n\n}\n"]},"metadata":{},"sourceType":"module"}