{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/moawad/workspace/kaykroo/frontend/components/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, useFormik } from 'formik';\nimport { axiosInstance } from '../util/axios';\nimport { useRouter } from 'next/router';\nimport * as Yup from \"yup\";\nexport default function Login(props) {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var formSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().min(5, 'Too Short!').max(50, 'Too Long!').required('Required')\n  });\n  var formik = useFormik({\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      password: ''\n    },\n    validationSchema: formSchema,\n    onSubmit: function onSubmit(values) {\n      axiosInstance.put(\"/user/\".concat(user.id), values).then(function (response) {\n        router.push(\"/view/\".concat(response.data.id));\n      })[\"catch\"](function (e) {\n        var _e$response$data$erro;\n\n        var errors = (_e$response$data$erro = e.response.data.errors) !== null && _e$response$data$erro !== void 0 ? _e$response$data$erro : [];\n        errors.forEach(function (field) {\n          formik.setFieldError(field.param, field.msg);\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.username) {\n        errors.username = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n\n      try {\n        axiosInstance.post('/user/login', values).then(function (response) {\n          router.push('/');\n        })[\"catch\"](function (e) {\n          console.log('error');\n        });\n      } catch (e) {//error.username = 'Wrong username or password';\n      }\n    },\n    children: function children(_ref2) {\n      var values = _ref2.values,\n          errors = _ref2.errors,\n          touched = _ref2.touched,\n          handleChange = _ref2.handleChange,\n          handleBlur = _ref2.handleBlur,\n          handleSubmit = _ref2.handleSubmit;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Username\",\n            name: \"username\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, _this), errors.username && touched.username && errors.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, _this), errors.password && touched.password && errors.password, \"                        \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"custom-control-input\",\n              id: \"customCheck1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"custom-control-label\",\n              htmlFor: \"customCheck1\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-dark btn-lg btn-block\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Login, \"3UF0p0VTbH20bHYAOoqX25faVyU=\", false, function () {\n  return [useRouter, useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/moawad/workspace/kaykroo/frontend/components/login.tsx"],"names":["React","Formik","useFormik","axiosInstance","useRouter","Yup","Login","props","router","formSchema","object","shape","firstName","string","min","max","required","lastName","email","password","formik","initialValues","user","validationSchema","onSubmit","values","put","id","then","response","push","data","e","errors","forEach","field","setFieldError","param","msg","username","setSubmitting","post","console","log","touched","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, useFormik} from 'formik';\nimport {axiosInstance} from '../util/axios';\nimport {useRouter} from 'next/router';\nimport * as Yup from \"yup\";\n\nexport default function Login(props) {\n    const router = useRouter();\n\n    const formSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        lastName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        email: Yup.string().email('Invalid email').required('Required'),\n        password: Yup.string()\n            .min(5, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required')\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            password: ''\n        },\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            axiosInstance.put(`/user/${user.id}`, values).then(response => {\n                router.push(`/view/${response.data.id}`);\n            }).catch(e => {\n                const errors = e.response.data.errors ?? [];\n                errors.forEach(field => {\n                    formik.setFieldError(field.param, field.msg);\n\n                });\n            });\n        }\n    });\n\n\n\n\n\n    return <Formik\n        initialValues={{username: '', password: ''}}\n        validate={values => {\n            const errors = {};\n            if (!values.username) {\n                errors.username = 'Required';\n            }\n            return errors;\n        }}\n        onSubmit={(values, {setSubmitting}) => {\n            try {\n                axiosInstance.post('/user/login', values).then(response => {\n                    router.push('/');\n                }).catch(e => {\n                    console.log('error');\n                });\n            } catch (e) {\n                //error.username = 'Wrong username or password';\n            }\n        }}\n    >\n        {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit\n          }) => (\n\n            <form onSubmit={handleSubmit}>\n\n                <div className='form-group'>\n                    <label>Username</label>\n                    <input type='text'\n                           className='form-control' placeholder='Username'\n                           name='username'\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           value={values.username}\n                    />\n                    {errors.username && touched.username && errors.username}\n\n                </div>\n\n                <div className='form-group'>\n                    <label>Password</label>\n                    <input\n                        type='password'\n                        className='form-control' placeholder='Password'\n                        name='password'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                    />\n                    {errors.password && touched.password && errors.password}                        </div>\n\n                <div className='form-group'>\n                    <div className='custom-control custom-checkbox'>\n                        <input type='checkbox' className='custom-control-input' id='customCheck1'/>\n                        <label className='custom-control-label' htmlFor='customCheck1'>Remember me</label>\n                    </div>\n                </div>\n\n                <button type='submit' className='btn btn-dark btn-lg btn-block'>Sign in</button>\n\n            </form>)}\n    </Formik>;\n\n}\n"]},"metadata":{},"sourceType":"module"}